openapi: 3.0.0
info:
  title: LaPince API
  description: Documentation de l’API de gestion budgétaire
  version: 1.0.0

servers:
  - url: http://localhost:3000/api

paths:

# ---------- Auth ----------

  /register:
    post:
      summary: Inscription utilisateur
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: Utilisateur créé
        '400':
          description: Données invalides

  /login:
    post:
      summary: Connexion utilisateur
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Connexion réussie
        '401':
          description: Identifiants invalides



  /user:
    get:
      summary: Récupérer les informations du profil utilisateur connecté
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Données de l’utilisateur récupérées avec succès
        '401':
          description: Accès non autorisé
    put:
      summary: Mettre à jour les informations de l'utilisateur connecté
      description: Permet de modifier l'email et/ou le mot de passe de l'utilisateur connecté. Un token valide est requis.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              example:
                email: "nouvelemail@example.com"
                password: "NouveauMotDePasse123"
      responses:
        '200':
          description: Informations utilisateur mises à jour
        '400':
          description: Données invalides
        '401':
          description: Token manquant ou invalide
        '404':
          description: Utilisateur non trouvé
        '500':
          description: Erreur serveur
    delete:
      summary: Supprimer le compte utilisateur
      description: Supprime définitivement le compte de l'utilisateur connecté. Un token valide est requis.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Compte utilisateur supprimé avec succès
        '401':
          description: Accès non autorisé
        '404':
          description: Utilisateur non trouvé
        '500':
          description: Erreur serveur

  
 # ---------- Budgets ----------


  /budgets:
    get:
      summary: Liste des budgets de l’utilisateur
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
    post:
      summary: Création d’un budget
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                limit:
                  type: number
                categoryId:
                  type: integer
      responses:
        '201':
          description: Budget créé

  /budgets/{id}:
    put:
      summary: Modifier un budget
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Budget mis à jour
    delete:
      summary: Supprimer un budget
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Budget supprimé

    # ---------- Expenses ----------

  /expenses:
    get:
      summary: Récupérer toutes les dépenses de l'utilisateur connecté
      description: Cette route permet de récupérer toutes les dépenses d'un utilisateur connecté.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Liste des dépenses récupérée avec succès
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Expense'
        '401':
          description: Token manquant ou invalide
        '500':
          description: Erreur serveur

    post:
      summary: Ajouter une nouvelle dépense
      description: Cette route permet à un utilisateur d'ajouter une nouvelle dépense.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                categoryId:
                  type: integer
                amount:
                  type: number
                  format: float
                description:
                  type: string
      responses:
        '201':
          description: Dépense ajoutée avec succès
        '400':
          description: Données invalides
        '401':
          description: Token manquant ou invalide
        '500':
          description: Erreur serveur

  /expenses/{id}:
    get:
      summary: Récupérer les détails d'une dépense spécifique
      description: Cette route permet de récupérer les détails d'une dépense en particulier via son ID.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID de la dépense
          schema:
            type: integer
      responses:
        '200':
          description: Dépense récupérée avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
        '400':
          description: ID invalide
        '401':
          description: Token manquant ou invalide
        '404':
          description: Dépense non trouvée
        '500':
          description: Erreur serveur

    put:
      summary: Mettre à jour une dépense
      description: Cette route permet de modifier les informations d'une dépense.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID de la dépense
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                categoryId:
                  type: integer
                amount:
                  type: number
                  format: float
                description:
                  type: string
      responses:
        '200':
          description: Dépense mise à jour avec succès
        '400':
          description: Données invalides
        '401':
          description: Token manquant ou invalide
        '404':
          description: Dépense non trouvée
        '500':
          description: Erreur serveur

    delete:
      summary: Supprimer une dépense
      description: Cette route permet de supprimer une dépense existante.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID de la dépense
          schema:
            type: integer
      responses:
        '200':
          description: Dépense supprimée avec succès
        '400':
          description: ID invalide
        '401':
          description: Token manquant ou invalide
        '404':
          description: Dépense non trouvée
        '500':
          description: Erreur serveur

    # ---------- Notifications ----------

  /notifications:
    get:
      summary: Récupérer les notifications de l'utilisateur
      description: Retourne toutes les notifications associées à l'utilisateur connecté.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Notifications récupérées
        '401':
          description: Accès non autorisé
        '500':
          description: Erreur serveur

    post:
      summary: Créer une nouvelle notification
      description: Permet de créer une notification pour l'utilisateur connecté.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                is_read:
                  type: boolean
              example:
                message: "Votre budget a été dépassé."
                is_read: false
      responses:
        '201':
          description: Notification créée
        '400':
          description: Données invalides
        '401':
          description: Accès non autorisé
        '500':
          description: Erreur serveur

  /notifications/{id}:
    put:
      summary: Modifier une notification
      description: Met à jour le contenu ou l'état de lecture d'une notification.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                is_read:
                  type: boolean
              example:
                message: "Rappel de budget modifié"
                is_read: true
      responses:
        '200':
          description: Notification mise à jour
        '400':
          description: Données invalides
        '401':
          description: Accès non autorisé
        '404':
          description: Notification non trouvée
        '500':
          description: Erreur serveur

    delete:
      summary: Supprimer une notification
      description: Supprime une notification spécifique de l'utilisateur.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Notification supprimée
        '401':
          description: Accès non autorisé
        '404':
          description: Notification non trouvée
        '500':
          description: Erreur serveur

  /notifications/{id}/read:
    put:
      summary: Marquer une notification comme lue
      description: Modifie l'état de lecture d'une notification à `true`.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Notification marquée comme lue
        '401':
          description: Accès non autorisé
        '404':
          description: Notification non trouvée
        '500':
          description: Erreur serveur

    # ---------- Categories ----------

  /categories:
    get:
      summary: Récupérer toutes les catégories disponibles
      description: Retourne la liste des catégories disponibles pour classer les dépenses et budgets.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Liste des catégories récupérée
        '401':
          description: Token manquant ou invalide
        '500':
          description: Erreur serveur
